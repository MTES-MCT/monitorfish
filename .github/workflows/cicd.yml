name: CI/CD Back & Front

on:
  push:
    paths:
    - '**.kt'
    - '**.js'
    - '**.ts'
    - '**.yml'
    - '.github/workflows/cicd.yml'
    - 'infra/configurations/**.properties'
    - 'infra/docker/DockerfileBuildApp'
    - '**.sql'
    - 'backend/pom.xml'

jobs:
  build:
    name: Test, build and Package
    runs-on: ubuntu-18.04
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true 
    steps:

    - name: Get last release version
      id: lastrelease
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        repository: mtes-mct/monitorfish

    - name: Set ENV profile as dev by default
      run: echo "ENV_PROFILE=dev" >> $GITHUB_ENV

    - name: Set ENV profile as PROD when it is a release
      if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/v')
      run: echo "ENV_PROFILE=prod" >> $GITHUB_ENV

    - name: Set VERSION env
      run: |
        if [ "${ENV_PROFILE}" != "prod" ]; then\
            echo "VERSION=${{ steps.lastrelease.outputs.release }}_snapshot" >> $GITHUB_ENV
        else\
            echo "VERSION=${{ steps.lastrelease.outputs.release }}" >> $GITHUB_ENV
        fi
    
    - name: Setup Java JDK
      uses: actions/setup-java@v1.4.2
      with:
        java-version: 11

    - uses: actions/checkout@v2
      
    - name: NPM install with caching
      uses: bahmutov/npm-install@v1.6.0
      with:
        # Working directory to specify subfolder in which dependencies are defined
        working-directory: frontend/
        useLockFile: true
        # Custom install command to use
        install-command: npm install
            
    - name: Unit test
      run: make test

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache-app
        key: ${{ runner.os }}-single-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-single-buildx

    - name: Build image
      uses: docker/build-push-action@v2
      with:
        context: .
        load: true
        builder: ${{ steps.buildx.outputs.name }}
        file: infra/docker/DockerfileBuildApp
        push: false
        tags: monitorfish-app:${{ env.VERSION }}
        cache-from: type=local,src=/tmp/.buildx-cache-app
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-app-new
        build-args: |
          VERSION=${{ env.VERSION }}
          ENV_PROFILE=${{ env.ENV_PROFILE }}
          GITHUB_SHA=${{ github.sha }}

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache-app
        mv /tmp/.buildx-cache-app-new /tmp/.buildx-cache-app

    - name: Push docker image to registry
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/v')
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${GITHUB_ACTOR} --password-stdin
        make docker-tag
        make docker-push
