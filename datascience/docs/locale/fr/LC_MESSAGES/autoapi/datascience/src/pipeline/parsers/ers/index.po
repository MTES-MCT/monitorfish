# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Vincent Ch√©ry
# This file is distributed under the same license as the Monitorfish package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Monitorfish\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-24 17:06+0200\n"
"PO-Revision-Date: 2021-08-23 14:49+0000\n"
"Language-Team: French (https://www.transifex.com/ministere-de-la-transition-ecologique-et-solidaire-1/teams/124045/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:2
#: de16078903054a16ba0a27cc60b8c3c1
msgid ":py:mod:`datascience.src.pipeline.parsers.ers`"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:8
#: 58416623a1c14da5ae2c2d1b89807c9c
msgid "Module Contents"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:12
#: 9a52a467a0e34949be58b8a9f9e94ddd
msgid "Functions"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:29:<autosummary>:1
#: 680cccfdd18a4ccfb91b3197347bf5fa
msgid ""
":obj:`simple_parser <datascience.src.pipeline.parsers.ers.simple_parser>`\\ "
"\\(el\\: xml.etree.ElementTree.Element\\, pass\\_child\\: bool \\= False\\)"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:29:<autosummary>:1
#: df801cd5ff1146908e5ba56105448e66
msgid ""
":obj:`parse_ops <datascience.src.pipeline.parsers.ers.parse_ops>`\\ "
"\\(ops\\)"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:29:<autosummary>:1
#: 0f2a8d1324254c648a00177db83c07d3
msgid ""
":obj:`parse_cor <datascience.src.pipeline.parsers.ers.parse_cor>`\\ "
"\\(cor\\)"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:29:<autosummary>:1
#: 39a83385273f495293acdd83ac85f743
msgid ""
":obj:`parse_del <datascience.src.pipeline.parsers.ers.parse_del>`\\ "
"\\(del\\_\\)"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:29:<autosummary>:1
#: 1c4a7928bd6c440b8f248478febee868
msgid ""
":obj:`parse_ret <datascience.src.pipeline.parsers.ers.parse_ret>`\\ "
"\\(ret\\)"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:29:<autosummary>:1
#: be79dc9d8cc9488fba388611d22ccf6a
msgid ""
":obj:`parse_ers <datascience.src.pipeline.parsers.ers.parse_ers>`\\ "
"\\(ers\\)"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:29:<autosummary>:1
#: 258c451043aa41f09f86efce5a42dcc8
msgid ""
":obj:`parse_log <datascience.src.pipeline.parsers.ers.parse_log>`\\ "
"\\(log\\)"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:29:<autosummary>:1
#: 2d57000f9b1f4f0e80237305641c76c3
msgid ":obj:`parse_ <datascience.src.pipeline.parsers.ers.parse_>`\\ \\(el\\)"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:29:<autosummary>:1
#: 1d116fe3845a49aaa7246802f7dd6b50
msgid ":obj:`parse <datascience.src.pipeline.parsers.ers.parse>`\\ \\(el\\)"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:29:<autosummary>:1
#: 645cadbf072f45638a9c6200b2e6701a
msgid ""
":obj:`parse_xml_string "
"<datascience.src.pipeline.parsers.ers.parse_xml_string>`\\ "
"\\(xml\\_string\\)"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:29:<autosummary>:1
#: f002b7b3dc834ec88fba0fac90ee5d7a
msgid ""
":obj:`batch_parse <datascience.src.pipeline.parsers.ers.batch_parse>`\\ "
"\\(ers\\_xmls\\: List\\[str\\]\\)"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:29:<autosummary>:1
#: 112da1fcfd534bd4a8436cb8d1090919
msgid ""
"Parses a list of ERS messages and return 2 tables as DataFrames containing "
"the"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:31
#: 1c31cee51a0a4e15827a80189b09cd5c
msgid "Attributes"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:37:<autosummary>:1
#: 70ba6f911cde48b7956365c3ae11ef72
msgid ":obj:`parsers <datascience.src.pipeline.parsers.ers.parsers>`\\"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:40
#: 590260a7cfe149ee89103ed1e2d4b53b
msgid "Bases: :py:obj:`Exception`"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:42
#: 29ac1c1b08564978bdf2317deeca51dc
msgid "Raised when an ERS message cannot be parsed."
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:82
#: 8c9a0ace90fe4157a745a69c0ca5e2b0
msgid ""
"Parses a list of ERS messages and return 2 tables as DataFrames containing "
"the information extracted from the messages."
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:0
#: 4b2c2a3a9dcc445782df70889c8ee136
msgid "Parameters"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:85
#: 7d13fbfcf83f4b7188dde1de2676f7cd
msgid "list of ERS xml messages"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:0
#: 51c9ae7474f94a88a67615d090185e14
msgid "Returns"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:88
#: 9b8fc93c5f6d44d38d4a8d62442efeb3
msgid ""
"Dataframe with parsed metadata, including a \"value\" column     with json "
"data extracted with the xml message pd.DataFrame:  Dataframe with parsed "
"metadata, including a \"xml_message\" column     with the original xml "
"message"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:90
#: 969871dbdeaa44cbbca84de8c9d23ba7
msgid "Dataframe with parsed metadata, including a \"value\" column"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:91
#: c0f769962ec145f1813dcc497f7e600c
msgid "with json data extracted with the xml message"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:92
#: bd23d567980d4f02b10373aa32d0d39a
msgid ""
"pd.DataFrame:  Dataframe with parsed metadata, including a \"xml_message\" "
"column"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:93
#: a3984605fc484a40bb5721756d86bcd9
msgid "with the original xml message"
msgstr ""

#: ../source/autoapi/datascience/src/pipeline/parsers/ers/index.rst:0
#: 65dcb5912cad4e80967aa14e74fe53e1
msgid "Return type"
msgstr ""
