:mod:`datascience.src.pipeline.flows.current_segments`
======================================================

.. py:module:: datascience.src.pipeline.flows.current_segments


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   datascience.src.pipeline.flows.current_segments.catch_zone_isin_fao_area
   datascience.src.pipeline.flows.current_segments.extract_catches
   datascience.src.pipeline.flows.current_segments.extract_segments
   datascience.src.pipeline.flows.current_segments.unnest
   datascience.src.pipeline.flows.current_segments.compute_current_segments
   datascience.src.pipeline.flows.current_segments.merge_segments_catches
   datascience.src.pipeline.flows.current_segments.load_current_segments



Attributes
~~~~~~~~~~

.. autoapisummary::

   datascience.src.pipeline.flows.current_segments.catches


.. function:: catch_zone_isin_fao_area(catch_zone: Union[None, str], fao_area: Union[None, str]) -> bool

   Return
   - True if a catch zone (e.g. '27.7.b') is in a given fao_area (e.g. '27.7.b' or
   '27')
   - False if a catch zone (e.g. '27.7.b') is NOT in a given fao_area (e.g. '28.6' or
   '27.7.b.4')
   - True if the fao_area if None (whatever the value of the catch_zone)
   - False if the fao_area is not None and the catch_zone is None


.. function:: extract_catches()


.. function:: extract_segments()


.. function:: unnest(segments)


.. function:: compute_current_segments(catches, segments)


.. function:: merge_segments_catches(catches, current_segments)


.. function:: load_current_segments(vessels_segments)


.. data:: catches
   

   

