:py:mod:`datascience.src.utils.database`
========================================

.. py:module:: datascience.src.utils.database


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   datascience.src.utils.database.get_tables_sizes
   datascience.src.utils.database.print_view_query_string
   datascience.src.utils.database.find_table_schema
   datascience.src.utils.database.print_schemas_tables
   datascience.src.utils.database.pg_dump_table



.. py:function:: get_tables_sizes(db: str, table_names: List[str]) -> pandas.DataFrame

   Returns a pandas DataFrame with the size of each table in tables_names, in Mb.

   db : 'ocan', 'fmc'
   view_name : the name of the view to inspect.


.. py:function:: print_view_query_string(db: str, view_name: str)

   View the SQL query string that was used to create an existing view in an Oracle
   database.

       db : 'ocan', 'fmc'
       view_name : the name of the view to inspect.


.. py:function:: find_table_schema(db: str, table_name: str)

   Looks for a table named table_name in all schemas of
   the designated database and return the name of the schema
   in which the table is found.

   If the table is not found, returns None.

   Possible values for db : 'ocan', 'monitorfish_remote',
                            'fmc', 'monitorfish_local'


.. py:function:: print_schemas_tables(db: str, schemas=None)

   Prints all schemas and associated tables in a database.
   Optionnal argument 'schemas' takes a list of schemas to restrict the scan.

   Possible values for db :
       'ocan', 'monitorfish_remote', 'fmc', 'monitorfish_local'


.. py:function:: pg_dump_table(db: str, table_name: str, what: Union[None, str] = None) -> str

   Runs ``pg_dump --schema-only`` on the selected database and returns the output as a
   string. Useful to generate DDL statements of tables and to output test data as sql
   scripts.

     * If ``db`` is ``monitorfish_local``, the ``pg_dump`` command will be run by the
     machine on which the command is run, so postres must be installed.
     * If ``db`` is ``monitorfish_remote``, the command in run through in the docker
     container with ``docker exec monitorfish_database``.

   :param db: 'monitorfish_remote' or 'monitorfish_local'
   :type db: str
   :param table_name: the name of the table to export.
   :type table_name: str
   :param what: ``'data-only'`` ``'schema-only'`` or ``None``. If
   :type what: Union[None, str]
   :param ``None``:
   :param output both data and schema definition. Defaults to ``None``.:

   :returns: output of ``pg_dump`` command
   :rtype: str


