services:
  db:
    image: ghcr.io/mtes-mct/monitorfish/monitorfish-database:pg16-ts2.14.2-postgis3.4.2
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=monitorfishdb
    volumes:
      - db-data:/var/lib/postgresql/data
      - ../../backend/src/main/resources/db/testdata/csv/:/testdata/csv
    ports:
      - ${DB_PUBLIC_PORT:-5432}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 60

  flyway:
    image: flyway/flyway:10.5.0
    command: migrate -password=postgres -schemas=public -user=postgres -url=jdbc:postgresql://db:5432/monitorfishdb
    volumes:
      - ../../backend/src/main/resources/db/:/flyway/sql
    depends_on:
      db:
        condition: service_healthy

  app:
    image: monitorfish-app:$MONITORFISH_VERSION
    container_name: monitorfish_backend
    environment:
      # Database Configuration
      - ENV_DB_URL=jdbc:postgresql://db:5432/monitorfishdb?user=postgres&password=postgres
      - ENV_DB_DRIVER_CLASS_NAME=org.postgresql.Driver
      - MONITORFISH_DATABASE_MISSIONS_ACTIONS_CHUNK_SIZE=100
      - MONITORFISH_MIGRATION_PATH=classpath:/db/migration,classpath:/db/testdata

      # Server Configuration
      - HOST_IP=127.0.0.1
      - MONITORFISH_SERVER_PORT=8880
      - MONITORFISH_AJP_PORT=8000
      - STATIC_FILES_PATH=/home/monitorfish/public
      - SPRING_CLOUD_GATEWAY_MVC_FORM_FILTER_ENABLED=false

      # Application Settings
      - MONITORFISH_SERVER_ROOT=http://localhost:8880

      # Sentry Backend
      - SENTRY_DSN=
      - MONITORFISH_SENTRY_ENABLED=false

      # MonitorEnv Backend
      - MONITORENV_URL=http://geoserver-monitorenv-stubs:8080

      # API Configuration
      - MONITORFISH_API_PROTECTED_API_KEY=APIKEY
      - MONITORFISH_API_PROTECTED_PATHS=/bff/*
      - MONITORFISH_API_PROTECTED_SUPER_USER_PATHS=/bff/v1/beacon_malfunctions,/bff/v1/missions,/bff/v1/operational_alerts,/bff/v1/reportings,/bff/v1/vessels/risk_factors,/bff/v1/admin/control_objectives,/bff/v1/admin/fleet_segments,/bff/v1/fleet_segments/compute
      - MONITORFISH_API_PROTECTED_PUBLIC_PATHS=/api/v1/authorization/management/*,/api/v1/beacon_malfunctions/*,/api/v1/mission_actions/*

      # OIDC Configuration
      - MONITORFISH_OIDC_ENABLED=true
      - MONITORFISH_OIDC_BYPASS_SIRET_FILTER=false
      - MONITORFISH_OIDC_PROXY_URL=http://keycloak:8080
      - MONITORFISH_OIDC_ISSUER_URI=http://keycloak:8080/realms/monitor
      - MONITORFISH_OIDC_AUTHORIZATION_URI=http://localhost:8880/realms/monitor/protocol/openid-connect/auth
      - MONITORFISH_OIDC_TOKEN_URI=http://keycloak:8080/realms/monitor/protocol/openid-connect/token
      - MONITORFISH_OIDC_USER_INFO_URI=http://keycloak:8080/realms/monitor/protocol/openid-connect/userinfo
      - MONITORFISH_OIDC_JWK_SET_URI=http://keycloak:8080/realms/monitor/protocol/openid-connect/certs
      - MONITORFISH_OIDC_CLIENT_ID=monitorfish
      - MONITORFISH_OIDC_CLIENT_SECRET=BHKLjYpcN2NzFlU2kTu63z8rDxQgUl8z
      - MONITORFISH_OIDC_REDIRECT_URI=http://localhost:8880/login/oauth2/code/proconnect
      - MONITORFISH_OIDC_LOGIN_URL=/oauth2/authorization/proconnect
      - MONITORFISH_OIDC_SUCCESS_URL=http://localhost:8880
      - MONITORFISH_OIDC_ERROR_URL=http://localhost:8880/register
      - MONITORFISH_OIDC_AUTHORIZED_SIRETS=1234567890,0987654321
      - MONITORFISH_OIDC_PROVIDER=proconnect
      - MONITORFISH_KEYCLOAK_PROXY_ENABLED=true

      # Scheduling
      - MONITORFISH_SCHEDULING_ENABLED=false

      # Gateway Configuration
      - SPRING_CLOUD_GATEWAY_MVC_FORM_FILTER_ENABLED=false

      # Frontend Configuration
      - FRONTEND_GEOSERVER_LOCAL_URL=http://0.0.0.0:8081
      - FRONTEND_GEOSERVER_REMOTE_URL=http://0.0.0.0:8081
      - FRONTEND_MAPBOX_KEY=pk.eyJ1IjoibW9uaXRvcmZpc2giLCJhIjoiY2tsdHJ6dHhhMGZ0eDJ2bjhtZmJlOHJmZiJ9.bdi1cO-cUcZKXdkEkqAoZQ
      - FRONTEND_MONITORENV_URL=http://0.0.0.0:8081
      - FRONTEND_OIDC_ENABLED=true
      - FRONTEND_MONITORFISH_VERSION=
      - FRONTEND_SENTRY_DSN=https://a5f3272efa794bb9ada2ffea90f2fec5@sentry.incubateur.net/8
      - FRONTEND_SENTRY_TRACING_ORIGINS=
      - FRONTEND_SENTRY_ENV=
      - FRONTEND_SHOM_KEY=rg8ele7cft4ujkwjspsmtwas
      - FRONTEND_MISSION_FORM_AUTO_SAVE_ENABLED=true # Even if we inject this env var, the value is not used (see cypress.config.ts)
      - FRONTEND_MISSION_FORM_AUTO_UPDATE_ENABLED=true
      - FRONTEND_PRIOR_NOTIFICATION_LIST_ENABLED=true
      - FRONTEND_VESSEL_LIST_ENABLED=true
      - FRONTEND_KEPLER_ACTIVITY_VISUALIZATION_ENABLED=true
      - FRONTEND_POSITION_ALERT_FORM_ENABLED=true
      - FRONTEND_MATOMO_URL=
      - FRONTEND_MATOMO_ID=
    ports:
      - 8880:8880
      - 8000:8000
      - 5000:5000
      - 5001:5001
    depends_on:
      flyway:
        condition: service_completed_successfully
      geoserver-monitorenv-stubs:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "1024m"

  keycloak:
    container_name: monitorfish_keycloak
    image: quay.io/keycloak/keycloak:23.0.0
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HOSTNAME_STRICT=false # See https://www.keycloak.org/server/reverseproxy for vars below
      - KC_HOSTNAME=keycloak:8080
      - KC_HTTP_ENABLED=true
      - PROXY_ADDRESS_FORWARDING=true
      - KC_PROXY=edge
      - KC_PROXY_HEADERS=forwarded
      - KC_HEALTH_ENABLED=true
      - KC_FRONTEND_URL=http://localhost:8880/
    ports:
      - "8085:8080"
    volumes:
      - ../dev/keycloak:/opt/keycloak/data/import
    command:
      - start-dev
      - --import-realm
    healthcheck:
      test: [ "CMD-SHELL",
              "exec 3<>/dev/tcp/localhost/8080 && echo -e 'GET /health/ready HTTP/1.1\\r\\nHost: localhost\\r\\nConnection: close\\r\\n\\r\\n' >&3 && cat <&3 | grep -q '200 OK'" ]
      interval: 30s
      timeout: 5s
      retries: 20

  geoserver-monitorenv-stubs:
    image: rodolpheche/wiremock
    ports:
      - 8081:8080
    volumes:
      - ../../frontend/cypress/mappings:/home/wiremock/mappings
    healthcheck:
      test: [
          "CMD-SHELL",
          "curl --fail
          http://localhost:8080/geoserver/wfs?service=WFS&version=1.1.0&request=GetFeature&typename=monitorfish:regulations&outputFormat=application/json&CQL_FILTER=topic=%27Ouest%20Cotentin%20Bivalves%27%20AND%20zone=%27Praires%20Ouest%20cotentin%27
          || exit 1 ",
        ]
      interval: 1s
      timeout: 1s
      retries: 30

volumes:
  db-data:
    driver: local
