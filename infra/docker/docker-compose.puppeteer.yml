services:
  monitorfish-db:
    image: ghcr.io/mtes-mct/monitorfish/monitorfish-database:pg16-ts2.14.2-postgis3.4.2
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=monitorfishdb
    volumes:
      - monitorfish-db-data:/var/lib/postgresql/data
      - ../../backend/src/main/resources/db/testdata/csv/:/testdata/csv
    ports:
      - ${DB_PUBLIC_PORT:-5432}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 60

  monitorenv-db:
    image: docker.pkg.github.com/mtes-mct/monitorenv/monitorenv-database:pg11-ts1.7.4-postgis3.3.2
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=monitorenvdb
    volumes:
      - monitorenv-db-data:/var/lib/postgresql/data
    ports:
      - 6432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 1s
      retries: 30

  flyway:
    image: flyway/flyway:10.5.0
    command: migrate -password=postgres -schemas=public -user=postgres -url=jdbc:postgresql://monitorfish-db:5432/monitorfishdb
    volumes:
      - ../../backend/src/main/resources/db/:/flyway/sql
    depends_on:
      monitorfish-db:
        condition: service_healthy

  monitorfish-app:
    image: monitorfish-app:$MONITORFISH_VERSION
    container_name: monitorfish_backend
    environment:
      # Database Configuration
      - ENV_DB_URL=jdbc:postgresql://monitorfish-db:5432/monitorfishdb?user=postgres&password=postgres
      - ENV_DB_DRIVER_CLASS_NAME=org.postgresql.Driver
      - MONITORFISH_DATABASE_MISSIONS_ACTIONS_CHUNK_SIZE=100
      - MONITORFISH_MIGRATION_PATH=classpath:/db/migration,classpath:/db/testdata

      # Server Configuration
      - HOST_IP=127.0.0.1
      - MONITORFISH_SERVER_PORT=8880
      - MONITORFISH_AJP_PORT=8000
      - STATIC_FILES_PATH=/home/monitorfish/public

      # Application Settings
      - SPRING_MAIN_LAZY_INITIALIZATION=true
      - MONITORFISH_SERVER_ROOT=http://localhost:8880

      # Sentry Backend
      - SENTRY_DSN=
      - MONITORFISH_SENTRY_ENABLED=false

      # MonitorEnv Backend
      - MONITORENV_URL=http://monitorenv-app:8880

      # API Configuration
      - MONITORFISH_API_PROTECTED_API_KEY=DUMMY-API-KEY
      - MONITORFISH_API_PROTECTED_PATHS=/bff/*
      - MONITORFISH_API_PROTECTED_SUPER_USER_PATHS=/bff/v1/beacon_malfunctions,/bff/v1/missions,/bff/v1/operational_alerts,/bff/v1/reportings,/bff/v1/vessels/risk_factors,/bff/v1/admin/control_objectives,/bff/v1/admin/fleet_segments,/bff/v1/fleet_segments/compute
      - MONITORFISH_API_PROTECTED_PUBLIC_PATHS=/api/v1/authorization/management/*,/api/v1/beacon_malfunctions/*,/api/v1/mission_actions/*

      # OIDC Configuration
      - MONITORFISH_OIDC_ENABLED=false
      - MONITORFISH_OIDC_IS_CERBERE=false
      - MONITORFISH_OIDC_PROXY_URL=http://keycloak:8080
      - MONITORFISH_OIDC_ISSUER_URI=http://keycloak:8080/realms/monitor
      - MONITORFISH_OIDC_CLIENT_ID=monitorfish
      - MONITORFISH_OIDC_CLIENT_SECRET=BHKLjYpcN2NzFlU2kTu63z8rDxQgUl8z
      - MONITORFISH_OIDC_REDIRECT_URI=http://localhost:8880/login/oauth2/code/proconnect
      - MONITORFISH_OIDC_LOGIN_URL=/oauth2/authorization/proconnect
      - MONITORFISH_OIDC_SUCCESS_URL=http://localhost:8880
      - MONITORFISH_OIDC_ERROR_URL=http://localhost:8880/register
      - MONITORFISH_OIDC_AUTHORIZED_SIRETS=1234567890,0987654321
      - MONITORFISH_OIDC_PROVIDER=proconnect
      - MONITORFISH_KEYCLOAK_PROXY_ENABLED=false

      # Scheduling
      - MONITORFISH_SCHEDULING_ENABLED=false

      # Gateway Configuration
      - SPRING_CLOUD_GATEWAY_MVC_FORM_FILTER_ENABLED=false

      # Frontend Configuration
      - FRONTEND_GEOSERVER_LOCAL_URL=http://0.0.0.0:8081
      - FRONTEND_GEOSERVER_REMOTE_URL=http://0.0.0.0:8081
      - FRONTEND_MAPBOX_KEY=pk.eyJ1IjoibW9uaXRvcmZpc2giLCJhIjoiY2tsdHJ6dHhhMGZ0eDJ2bjhtZmJlOHJmZiJ9.bdi1cO-cUcZKXdkEkqAoZQ
      - FRONTEND_MONITORENV_URL=http://0.0.0.0:9880
      - FRONTEND_OIDC_ENABLED=false
      - FRONTEND_MONITORFISH_VERSION=
      - FRONTEND_SENTRY_DSN=https://a5f3272efa794bb9ada2ffea90f2fec5@sentry.incubateur.net/8
      - FRONTEND_SENTRY_TRACING_ORIGINS=
      - FRONTEND_SENTRY_ENV=
      - FRONTEND_SHOM_KEY=rg8ele7cft4ujkwjspsmtwas
      - FRONTEND_MISSION_FORM_AUTO_SAVE_ENABLED=true # Even if we inject this env var, the value is not used (see cypress.config.ts)
      - FRONTEND_MISSION_FORM_AUTO_UPDATE_ENABLED=true
      - FRONTEND_PRIOR_NOTIFICATION_LIST_ENABLED=true
      - FRONTEND_VESSEL_LIST_ENABLED=true
      - FRONTEND_KEPLER_ACTIVITY_VISUALIZATION_ENABLED=true
      - FRONTEND_POSITION_ALERT_FORM_ENABLED=true
      - FRONTEND_MATOMO_URL=
      - FRONTEND_MATOMO_ID=
    ports:
      - 8880:8880
      - 8000:8000
      - 5000:5000
      - 5001:5001
    depends_on:
      flyway:
        condition: service_completed_successfully
      geoserver-stubs:
        condition: service_healthy
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "1024m"

  monitorenv-app:
    image: docker.pkg.github.com/mtes-mct/monitorenv/monitorenv-app:${MONITORENV_VERSION}
    container_name: monitorenv_backend
    environment:
      - ENV_DB_URL=jdbc:postgresql://monitorenv-db:5432/monitorenvdb?user=postgres&password=${MONITORENV_POSTGRES_PASSWORD}
      - FLYWAY_MIGRATION_PATH=${FLYWAY_MIGRATION_PATH}
      - FRONTEND_GEOSERVER_NAMESPACE=${MONITORENV_FRONTEND_GEOSERVER_NAMESPACE}
      - FRONTEND_GEOSERVER_REMOTE_URL=${MONITORENV_FRONTEND_GEOSERVER_REMOTE_URL}
      - FRONTEND_GOOGLEMAPS_API_KEY=${MONITORENV_FRONTEND_GOOGLEMAPS_API_KEY}
      - FRONTEND_MAPBOX_KEY=${MONITORENV_FRONTEND_MAPBOX_KEY}
      - FRONTEND_MISSION_FORM_AUTO_SAVE_ENABLED=${MONITORENV_FRONTEND_MISSION_FORM_AUTO_SAVE_ENABLED}
      - FRONTEND_MISSION_FORM_AUTO_UPDATE=${MONITORENV_FRONTEND_MISSION_FORM_AUTO_UPDATE}
      - FRONTEND_MONITORENV_VERSION=${MONITORENV_VERSION}
      - FRONTEND_SENTRY_DSN=${MONITORENV_FRONTEND_SENTRY_DSN}
      - FRONTEND_SENTRY_ENV=${MONITORENV_FRONTEND_SENTRY_ENV}
      - FRONTEND_SENTRY_TRACING_ORIGIN=${MONITORENV_FRONTEND_SENTRY_TRACING_ORIGIN}
      - FRONTEND_SHOM_KEY=${MONITORENV_FRONTEND_SHOM_KEY}
      - HOST_IP=127.0.0.1
      - MONITORFISH_API_KEY=${MONITORENV_MONITORFISH_API_KEY}
      - SPRING_PROFILES_ACTIVE=test
      - FRONTEND_DASHBOARD_ENABLED=${MONITORENV_FRONTEND_DASHBOARD_ENABLED}
      - FRONTEND_METABASE_URL=${MONITORENV_FRONTEND_METABASE_URL}
      - FRONTEND_REPORTING_FORM_AUTO_SAVE_ENABLED=${MONITORENV_FRONTEND_REPORTING_FORM_AUTO_SAVE_ENABLED}
      - FRONTEND_REPORTING_FORM_AUTO_UPDATE=${MONITORENV_FRONTEND_REPORTING_FORM_AUTO_UPDATE}
      - FRONTEND_VIGILANCE_AREA_ENABLED=${MONITORENV_FRONTEND_VIGILANCE_AREA_ENABLED}
      - FRONTEND_OIDC_ENABLED=${MONITORENV_FRONTEND_OIDC_ENABLED}
      - FRONTEND_OIDC_AUTHORITY=
      - FRONTEND_OIDC_CLIENT_ID=
      - FRONTEND_OIDC_REDIRECT_URI=
      - MONITORENV_OIDC_CACHE_IN_MINUTES=${MONITORENV_OIDC_CACHE_IN_MINUTES}
      - MONITORENV_OIDC_ENABLED=${MONITORENV_OIDC_ENABLED}
      - MONITORENV_OIDC_ISSUER_URI=${MONITORENV_OIDC_ISSUER_URI}
      - MONITORFISH_KEYCLOAK_PROXY_ENABLED=false
      - MONITORENV_SENTRY_ENABLED=${MONITORENV_SENTRY_ENABLED}
      - RAPPORTNAV_URL=${RAPPORTNAV_URL}
      - SENTRY_DSN=${SENTRY_DSN}
      - FRONTEND_SENTRY_AUTH_TOKEN=${FRONTEND_SENTRY_AUTH_TOKEN}
      - FRONTEND_MATOMO_URL=${FRONTEND_MATOMO_URL}
      - FRONTEND_MATOMO_ID=${FRONTEND_MATOMO_ID}
    ports:
      - 9880:8880
      - 9000:8000
      - 6000:5000
      - 6001:5001
    depends_on:
      - monitorenv-db
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "1024m"

  geoserver-stubs:
    image: rodolpheche/wiremock
    ports:
      - 8081:8080
    volumes:
      - ../../frontend/cypress/mappings:/home/wiremock/mappings
    healthcheck:
      test: [
          "CMD-SHELL",
          "curl --fail
          http://localhost:8080/geoserver/wfs?service=WFS&version=1.1.0&request=GetFeature&typename=monitorfish:regulations&outputFormat=application/json&CQL_FILTER=topic=%27Ouest%20Cotentin%20Bivalves%27%20AND%20zone=%27Praires%20Ouest%20cotentin%27
          || exit 1 ",
        ]
      interval: 1s
      timeout: 1s
      retries: 30

volumes:
  monitorfish-db-data:
    driver: local
  monitorenv-db-data:
    driver: local
