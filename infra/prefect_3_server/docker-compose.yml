services:
  postgres:
    image: postgres:15
    container_name: prefect-db
    environment:
      POSTGRES_USER: prefect
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?error}
      POSTGRES_DB: prefect
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres.conf:/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prefect"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    restart: always
    deploy:
      resources:
        reservations:
          cpus: '0.5'
          memory: 500M

  redis:
    image: redis:7
    restart: always

  prefect-api:
    image: prefecthq/prefect:3-python3.12
    container_name: prefect-server
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_started
    environment:
      # Prefect API and UI configuration
      PREFECT_API_URL: ${PREFECT_API_URL:?error}
      PREFECT_UI_URL: ${PREFECT_UI_URL:?error}
      
      # Database configuration
      PREFECT_API_DATABASE_CONNECTION_URL: postgresql+asyncpg://prefect:${POSTGRES_PASSWORD:?error}@postgres:5432/prefect?ssl=disable
      PREFECT_API_DATABASE_MIGRATE_ON_START: "false"
      # Redis
      PREFECT_MESSAGING_BROKER: prefect_redis.messaging
      PREFECT_MESSAGING_CACHE: prefect_redis.messaging
      PREFECT_SERVER_EVENTS_CAUSAL_ORDERING: prefect_redis.ordering
      PREFECT_SERVER_CONCURRENCY_LEASE_STORAGE: prefect_redis.lease_storage
      PREFECT_REDIS_MESSAGING_HOST: redis
      PREFECT_REDIS_MESSAGING_PORT: "6379"
    ports:
      - "4200:4200"
    restart: always
    command: ["prefect", "server", "start", "--host", "0.0.0.0", "--no-services"]

  migrate:
    image: prefecthq/prefect:3-python3.12
    depends_on:
      postgres:
        condition: service_healthy
    command: prefect server database upgrade -y
    environment:
      PREFECT_API_DATABASE_CONNECTION_URL: postgresql+asyncpg://prefect:${POSTGRES_PASSWORD:?error}@postgres:5432/prefect

  prefect-background:
    image: prefecthq/prefect:3-python3.12
    container_name: prefect-background-services
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_started
    command: prefect server services start
    environment:
      # Database configuration
      PREFECT_SERVER_DATABASE_CONNECTION_URL: postgresql+asyncpg://prefect:${POSTGRES_PASSWORD:?error}@postgres:5432/prefect?ssl=disable
      PREFECT_SERVER_DATABASE_MIGRATE_ON_START: "false"

      # Redis configuration
      PREFECT_MESSAGING_BROKER: prefect_redis.messaging
      PREFECT_MESSAGING_CACHE: prefect_redis.messaging
      PREFECT_SERVER_EVENTS_CAUSAL_ORDERING: prefect_redis.ordering
      PREFECT_SERVER_CONCURRENCY_LEASE_STORAGE: prefect_redis.lease_storage
      PREFECT_REDIS_MESSAGING_HOST: redis
      PREFECT_REDIS_MESSAGING_PORT: "6379"

      # Scheduler
      PREFECT_SERVER_SERVICES_SCHEDULER_LOOP_SECONDS: 60
      PREFECT_SERVER_SERVICES_SCHEDULER_MAX_RUNS: 10
      PREFECT_SERVER_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME: PT5M
      PREFECT_SERVER_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME: P14D
      PREFECT_SERVER_SERVICES_SCHEDULER_RECENT_DEPLOYMENTS_LOOP_SECONDS: 30

      # Telemetry
      PREFECT_SERVER_ANALYTICS_ENABLED: "false"

    restart: always

volumes:
  postgres_data: