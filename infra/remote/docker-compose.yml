services:
  db:
    image: ghcr.io/mtes-mct/monitorfish/monitorfish-database:$DATABASE_VERSION
    container_name: monitorfish_database
    user: ":${MONITORFISH_LOGS_AND_BACKUPS_GID}"
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    volumes:
      - db-data:/var/lib/postgresql/data
      - "${MONITORFISH_BACKUPS_FOLDER}:/opt/monitorfish_backups"
    ports:
      - 5432:5432
    networks:
      - backend
    restart: always

  app:
    image: docker.pkg.github.com/mtes-mct/monitorfish/monitorfish-app:$MONITORFISH_VERSION
    container_name: monitorfish_backend
    user: "monitorfish:${MONITORFISH_LOGS_AND_BACKUPS_GID}"
    environment:
      - SPRING_PROFILES_ACTIVE=$MONITORFISH_ENV
      - HOST_IP=127.0.0.1
      - MONITORFISH_HTTP_PROXY_HOST=$MONITORFISH_HTTP_PROXY_HOST
      - MONITORFISH_HTTP_PROXY_PORT=$MONITORFISH_HTTP_PROXY_PORT
      - MONITORFISH_HTTP_NON_PROXY_HOSTS=$MONITORFISH_HTTP_NON_PROXY_HOSTS
      - MONITORFISH_VERSION=$MONITORFISH_VERSION
      - ENV_DB_URL=jdbc:postgresql://db:5432/$POSTGRES_DB?user=$POSTGRES_USER&password=$POSTGRES_PASSWORD
      - FRONTEND_GEOSERVER_REMOTE_URL=$MONITORFISH_GEOSERVER_REMOTE_URL
      - FRONTEND_GEOSERVER_LOCAL_URL=$MONITORFISH_GEOSERVER_LOCAL_URL
      - FRONTEND_MONITORENV_URL=$MONITORFISH_MONITORENV_PUBLIC_URL
      - MONITORENV_URL=$MONITORFISH_MONITORENV_URL
      - FRONTEND_MAPBOX_KEY=$MONITORFISH_MAPBOX_KEY
      - FRONTEND_SHOM_KEY=$MONITORFISH_SHOM_KEY
      - FRONTEND_OIDC_ENABLED=$MONITORFISH_OIDC_ENABLED
      - MONITORFISH_OIDC_ENABLED=$MONITORFISH_OIDC_ENABLED
      - MONITORFISH_OIDC_ISSUER_URI=$MONITORFISH_OIDC_AUTHORITY
      - FRONTEND_OIDC_REDIRECT_URI=$MONITORFISH_OIDC_REDIRECT_URI
      - FRONTEND_OIDC_LOGOUT_REDIRECT_URI=$MONITORFISH_OIDC_LOGOUT_REDIRECT_URI
      - FRONTEND_OIDC_AUTHORITY=$MONITORFISH_OIDC_AUTHORITY
      - FRONTEND_OIDC_CLIENT_ID=$MONITORFISH_OIDC_CLIENT
      - MONITORFISH_API_PROTECTED_API_KEY=$MONITORFISH_API_PROTECTED_API_KEY
      - MONITORFISH_API_PROTECTED_PATHS=$MONITORFISH_API_PROTECTED_PATHS
      - MONITORFISH_API_PROTECTED_PUBLIC_PATHS=$MONITORFISH_API_PROTECTED_PUBLIC_PATHS
      - MONITORFISH_SCHEDULING_ENABLED=$MONITORFISH_SCHEDULING_ENABLED
      - MONITORFISH_SENTRY_ENV=$MONITORFISH_SENTRY_ENV
      - FRONTEND_SENTRY_ENV=$MONITORFISH_SENTRY_ENV
      - SENTRY_DSN=$MONITORFISH_SENTRY_DSN
      - FRONTEND_SENTRY_DSN=$MONITORFISH_SENTRY_DSN
      - FRONTEND_SENTRY_TRACING_ORIGINS=$MONITORFISH_SENTRY_TRACING_ORIGINS
      - FRONTEND_MONITORFISH_VERSION=$MONITORFISH_VERSION
      - FRONTEND_MISSION_FORM_AUTO_SAVE_ENABLED=$MONITORFISH_MISSION_FORM_AUTO_SAVE_ENABLED
      - FRONTEND_MISSION_FORM_AUTO_UPDATE_ENABLED=$MONITORFISH_MISSION_FORM_AUTO_UPDATE_ENABLED
      - FRONTEND_PRIOR_NOTIFICATION_LIST_ENABLED=$MONITORFISH_PRIOR_NOTIFICATION_LIST_ENABLED
      - FRONTEND_VESSEL_LIST_ENABLED=$MONITORFISH_VESSEL_LIST_ENABLED
      - FRONTEND_KEPLER_ACTIVITY_VISUALIZATION_ENABLED=$MONITORFISH_KEPLER_ACTIVITY_VISUALIZATION_ENABLED
      - FRONTEND_POSITION_ALERT_FORM_ENABLED=$MONITORFISH_POSITION_ALERT_FORM_ENABLED
      - FRONTEND_MATOMO_URL=$MONITORFISH_MATOMO_URL
      - FRONTEND_MATOMO_ID=$MONITORFISH_MATOMO_ID
    ports:
      - 8880:8880
      - 8000:8000
      - 5000:5000
      - 5001:5001
    volumes:
      - "${MONITORFISH_LOGS_FOLDER}:/home/monitorfish/logs"
    networks:
      - backend
    depends_on:
      - db
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8880/api/v1/healthcheck || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "1024m"

  geoserver:
    container_name: monitorfish_geoserver
    image: kartoza/geoserver:2.18.0
    restart: on-failure:5
    environment:
      - USE_CORS=1
    ports:
      - 8001:8080
    volumes:
      - geoserver-data:/opt/geoserver/data_dir
    networks:
      - backend
    healthcheck:
      test: curl --fail -s http://localhost:8080/geoserver/index.html || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3

networks:
  backend:

volumes:
  db-data:
    name: $DB_DATA_VOLUME_NAME
  geoserver-data:
    driver: local
